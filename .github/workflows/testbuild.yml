name: Test and Build

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_call:

permissions:
  contents: read

jobs:

  tests:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    - name: Python Version
      run: python --version
    - name: Update Pip
      run: python -m pip install --upgrade pip
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Install rsatoolbox
      run: pip install .
    - name: Install test dependencies
      run: pip install -r tests/requirements.txt
    - name: Skeleton tests
      run: python -m unittest -v rsatoolbox.test
    - name: Unit tests
      run: pytest

  source:
    needs: tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Python Version
      run: python --version
    - name: Update Pip
      run: python -m pip install --upgrade pip
    - name: Install Build
      run: pip install build setuptools
    - name: Build package
      run: python -m build --sdist
    - name: Install rsatoolbox (Linux, Mac)
      run: pip install dist/*
      if: matrix.os != 'windows-latest'
    - name: Install rsatoolbox (Windows)
      run: |
        $sdistfname = Get-ChildItem dist -Name
        pip install dist/$sdistfname
      if: matrix.os == 'windows-latest'
    - name: Install test dependencies
      run: pip install -r tests/requirements.txt
    - name: Skeleton tests
      run: python -m unittest -v rsatoolbox.test
    - name: Unit tests
      run: pytest
    - name: Check package compliance
      run: |
        pip install -q twine
        twine check dist/*
    - name: Store artifact
      uses: actions/upload-artifact@v4
      with:
        name: source-${{ matrix.os }}-${{ matrix.python-version }}
        path: dist/*
        if-no-files-found: error
        retention-days: 1

  binaries:
    needs: tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Python Version
      run: python --version
    - name: Update Pip
      run: python -m pip install --upgrade pip
    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.19.2
    - name: Build wheels
      run: python -m cibuildwheel --output-dir dist
    - name: Check package compliance
      run: |
        pip install -q twine
        twine check dist/*
    - name: Store artifact
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: dist/*.whl
        if-no-files-found: error
        retention-days: 1
